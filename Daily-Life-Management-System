#include <bits/stdc++.h>
//#include <ctime>
using namespace std;
struct taskStore{
    int startHr;
    int startMn;
    int endHr;
    int endMn;
    string taskName;
};
deque<taskStore>task;
void taskInput(){
  //int size=task.size();

  taskStore newnode;
     task.push_back(newnode);

  // task.resize(size+1);
   int size=task.size();

  cout<<"type start hour and min with a space (like 11 35):\n";
    cin>>task[size-1].startHr>>task[size-1].startMn;

  cout<<"type end hour and min with a space:\n";
    cin>>task[size-1].endHr>>task[size-1].endMn;
  cout<<"what task you will do:\n";
    cin>>task[size-1].taskName;
}

void specificTaskT(){
    time_t now = time(0); // Get the current time as a time_t value
    tm* local_time = localtime(&now); // Convert time_t to tm struct for local time

    int hour = local_time->tm_hour;
    int minute = local_time->tm_min;
    //int second = local_time->tm_sec;
    bool flag=true;
    for(int i=0;i<task.size();i++){

      if(hour>=task[i].startHr&&hour<=task[i].endHr){
       
        if(hour==task[i].startHr&&minute<task[i].startMn)continue;
     
        if(hour==task[i].endHr&&minute>task[i].endMn)continue;
       
        cout<<"Your task:\n";
        cout<<task[i].taskName<<"\n";
        flag=false;
        break;
      }
    }
    if(flag){
      cout<<"NO Task Here!\n";
    }
       
}
int main(){
    int t=1;
  do{
  taskInput();
  specificTaskT();
  cout<<"continue by typing 1, for stop-type 0\n";
    cin>>t;
  }
  while(t);
  
  return 0;
}
